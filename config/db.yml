apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/metadata.name: postgres
  name: postgres
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-secret
  namespace: postgres
  labels:
    app: postgres
    kubernetes.io/metadata.name: postgres
data:
  POSTGRES_DB: my_db
  POSTGRES_USER: db_user
  POSTGRES_PASSWORD: Password!xyz
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: postgres
  annotations:
    kapp.k14s.io/change-group: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-secret
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: postgres-volume-claim
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-volume
  labels:
    type: local
    app: postgres
  annotations:
    kapp.k14s.io/owned-for-deletion: ""
    kapp.k14s.io/change-group: pv
spec:
  storageClassName: standard
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /data/postgresql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-volume-claim
  namespace: postgres
  annotations:
    kapp.k14s.io/owned-for-deletion: ""
    kapp.k14s.io/change-rule: upsert after upserting pv
  labels:
    app: postgres
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: postgres
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
    - port: 5432
  selector:
    app: postgres